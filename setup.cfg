[metadata]
name = skycam_utils
author = T. E. Pickering
author_email = te.pickering@gmail.com
description = Utilities for analyzing all-sky camera data
long_description = file: README.rst
license = BSD 3-Clause
url = http://github.com/tepickering/skycam_utils
edit_on_github = True
github_project = tepickering/skycam_utils

[options]
install_requires = astropy
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
include_package_data = True

[options.extras_require]
docs =
    sphinx-astropy
test =
    tox
    pytest
    pytest-cov
    pytest-astropy
    nose
    coverage
    codecov
all =
    matplotlib
    astropy
    photutils
    scikit-image
    ccdproc
extra =
    astroscrappy
    jupyter

[options.entry_points]
console_scripts =

[options.package_data]
* = *.c, *.fits
skycam_utils = data/*

[tool:pytest]
testpaths = "skycam_utils" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
parallel = True
branch = True
omit =
    skycam_utils/_astropy_init*
    skycam_utils/conftest.py
    skycam_utils/*setup_package*
    skycam_utils/tests/*
    skycam_utils/*/tests/*
    skycam_utils/extern/*
    skycam_utils/version*
    */skycam_utils/_astropy_init*
    */skycam_utils/conftest.py
    */skycam_utils/*setup_package*
    */skycam_utils/tests/*
    */skycam_utils/*/tests/*
    */skycam_utils/extern/*
    */skycam_utils/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_